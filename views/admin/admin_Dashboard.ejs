<!DOCTYPE html>
<html lang="en">
        <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title><%- title %></title>
                <link rel="shortcut icon" href="/images/iconshoe.jpg" type="">
                <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
                <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.3.0/exceljs.min.js"></script>
                <style>
                    .sidebar {
                        position: fixed;
                        top: 0;
                        left: 0;
                        height: 100vh;
                        background-color: #ffbe33;
                        color: #fff;
                        padding-top: 5rem;
                        width: 16.666667%;
                        overflow-y: auto;
                        z-index: 100;
                    }

                    .sidebar a {
                        color: #fff;
                        text-decoration: none;
                    }

                    .sidebar a:hover {
                        background-color: #071553;
                    }

                    .content {
                        margin-left: 16.666667%;
                        padding: 2rem;
                        margin-top: 3.5rem;
                        width: calc(100% - 16.666667%);
                    }

                    .navbar {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    z-index: 200; 
                  }

                    #couponDetails {
                        display: none;
                    }

                    .date-range {
                        display: none;
                    }

                    .chart-container {
                        width: 100%;
                        height: 400px;
                        margin-top: 20px;
                    }

                    .card {
                        border-radius: 15px;
                        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
                        transition: transform 0.3s ease;
                    }

                    .card:hover {
                        transform: translateY(-5px);
                    }

                    .card-header {
                        border-top-left-radius: 15px !important;
                        border-top-right-radius: 15px !important;
                        background: linear-gradient(45deg, #3a7bd5, #00d2ff) !important;
                        border: none;
                    }

                    #salesChart {
                        min-height: 400px;
                        padding: 20px;
                    }

                    .card-body {
                        padding: 1.5rem;
                    }

                    form-group {
  width: 100%;
  max-width: 350px;
  margin: 0 auto;
  padding: 15px;
  background: linear-gradient(135deg, rgba(58, 123, 213, 0.2), rgba(0, 210, 255, 0.2));
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}


.custom-select {
  font-size: 1.1rem;
  padding: 0.8rem;
  border-radius: 8px;
  background: #ffffff;
  border: 2px solid #3a7bd5;
}

.custom-select:focus {
  border-color: #f76c7e;
  box-shadow: 0 0 5px rgba(58, 123, 213, 0.5);
}


.custom-select:hover {
  background-color: #e3f2fd;
}


label {
  color: #333333;
  font-weight: bold;
  font-size: 1rem;
}


                    #loadingIndicator {
                        position: relative;
                        padding: 20px;
                        background: rgba(255, 255, 255, 0.9);
                        border-radius: 8px;
                        margin-top: 15px;
                    }

                    .alert {
                        animation: slideIn 0.5s ease-out;
                    }

                    @keyframes slideIn {
                        from {
                            transform: translateY(-20px);
                            opacity: 0;
                        }
                        to {
                            transform: translateY(0);
                            opacity: 1;
                        }
                    }

                    .alert-dismissible .close {
                        padding: 0.5rem 1rem;
                    }

                    @media (max-width: 768px) {
                        .sidebar {
                            position: static;
                            height: auto;
                            width: 100%;
                            padding-top: 1rem;
                        }
                        
                        .content {
                            margin-left: 0;
                            width: 100%;
                        }
                    }

                    .sidebar .nav-link {
                        padding: 0.8rem 1rem;
                        transition: all 0.3s ease;
                        border-radius: 5px;
                        margin: 0.2rem 0.5rem;
                    }

                    .sidebar .nav-link:hover {
                        background-color: #071553;
                        transform: translateX(5px);
                    }

                    .sidebar .nav-link i {
                        margin-right: 10px;
                        width: 20px;
                        text-align: center;
                    }

                    .sidebar .nav-link.active {
                        background-color: #071553;
                        font-weight: bold;
                    }
                </style>
      </head>
       <body>
                <!-- Navbar -->
                <nav class="navbar navbar-expand-lg navbar-light bg-light">
                    <div class="collapse navbar-collapse justify-content-end">
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="adminDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-user"></i> Admin
                                </a>
                                <div class="dropdown-menu" aria-labelledby="adminDropdown">
                                    <a class="dropdown-item" href="/admin/logout" id="logoutBtn">Logout</a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </nav>

                 <div class="container-fluid">
                    <div class="row">
                        <!-- Sidebar -->
                        <nav class="col-md-2 sidebar mt-5">
                            <ul class="nav flex-column">
                                <li class="nav-item"><a class="nav-link active" href="/admin/loadAdminDash"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/loaduserMng"><i class="fas fa-users"></i> Users</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/loadProuctPage"><i class="fas fa-box"></i> Products</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/loardOrderMng"> <i class="fas fa-shopping-cart"></i> Orders</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/categoryPage"><i class="fas fa-sliders-h"></i> Category</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/loadCouponPage"><i class="fas fa-tag"></i> Coupon</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/offer"><i class="fas fa-tags"></i> Offer</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                            </ul>
                        </nav>
                        <!-- Main Content -->
                        <main role="main" class="col-md-10 content">
                           <div class="container mt-5">
                           <h1 class="text-center">Admin Dashboard</h1>
                            <div class="row">
                             <!-- Sales Report Section -->
                            <div class="col-md-12 mb-4">
                            <div class="card">
                                <div class="card-header card-header bg-secondary text-white text-center">
                                    Sales Report
                                </div>
                                <div class="card-body">
                                    <form id="salesReportForm">
                                        <div class="form-row">
                                            <div class="form-group col-md-2">
                                                <label for="startDate">Start Date</label>
                                                <input type="date" class="form-control" id="startDate" name="startDate" required>
                                            </div>
                                            <div class="form-group col-md-2">
                                                <label for="endDate">End Date</label>
                                                <input type="date" class="form-control" id="endDate" name="endDate" required>
                                            </div>
                                            <div class="form-group col-md-2">
                                                <label for="reportType">Report Type</label>
                                                <select class="form-control" id="reportType" name="reportType">
                                                    <option value="json">View Online</option>
                                                    <option value="pdf">Download PDF</option>
                                                    <option value="excel">Download Excel</option>
                                                </select>
                                            </div>
                                            <div class="form-group col-md-2">
                                                <label>&nbsp;</label>
                                                <button type="submit" class="btn btn-primary btn-block">Generate Report</button>
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="dateRangeSelect">Quick Select</label>
                                                <select id="dateRangeSelect" class="form-control" onchange="setDateRange(this.value)">
                                                    <option value="">Select Date Range</option>
                                                    <option value="today">Today</option>
                                                    <option value="thisWeek">This Week</option>
                                                    <option value="thisMonth">This Month</option>
                                                    <option value="thisYear">This Year</option>
                                                </select>
                                            </div>
                                        </div>
                                    </form>
                                    <div id="reportResults" class="mt-4"></div>
                                </div>
                            </div>
                            </div>

                            <!-- Sales Overview Chart -->
                            <div class="col-md-12">
                             <div class="card">
                                <div class="card-header card-header bg-secondary text-white text-center">
                                    Sales Overview
                                </div>
                                <div class="card-body">
                                    <div class="form-group">
                                        <label for="chartType">Select View</label>
                                        <select id="chartType" class="form-control" onchange="fetchOrderData()">
                                          <option value="monthly">Monthly</option>
                                          <option value="yearly">Yearly</option>
                                        </select>
                                      </div>
                                    <div class="chart-container">
                                        <canvas id="salesChart"></canvas>
                                    </div>
                                </div>
                            </div>
                           </div>

                               <!-- Recent Orders Start -->
                            <div class="col-md-12 mt-5">
                                <div class="card">
                                    <div class="card-header bg-secondary text-white text-center">
                                      Recent Orders
                                    </div>
                                    <div class="card-body">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Order ID</th>
                                                <th>Date</th>
                                                <th>Status</th>
                                              </tr>
                                        </thead>
                                            <tbody>
                                                <% if(orders.length != 0) { %>
                                                <% orders.forEach((order, index) => { %>
                                                <tr>
                                                    <td><%= index + 1 %></td> 
                                                    <td><%= order.orderId %></td>
                                                    <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                                                    <td><%= order.orderStatus || 'Pending' %></td> 
                                                </tr>
                                                <% }) %>
                                                <% } else { %>
                                                <tr>
                                                    <td colspan="4" class="text-center">No recent orders found</td>
                                                </tr>
                                                <% } %>
                                            </tbody>
                                        </table>
                                    </div>
                            </div>
                            
                                <div class="container mt-5">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="card">
                                                <div class="card-header bg-secondary text-white text-center">
                                                    Best Selling product 
                                                </div>
                                                <div class="card-body">
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th>#</th>
                                                                <th>Product Name</th>
                                                                <th>Sales Qty</th>
                                                              </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% if(product.length != 0) { %>
                                                            <% product.forEach((Product, index) => { %>
                                                            <tr>
                                                                <td><%= index + 1 %></td>
                                                                <td><%= Product.productname %></td>
                                                                <td><%= Product.saleCount %></td>
                                                            </tr>
                                                            <% }) %>
                                                            <% } else { %>
                                                            <tr>
                                                                <td colspan="4" class="text-center">No recent orders found</td>
                                                            </tr>
                                                            <% } %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-md-6">
                                            <div class="card">
                                                <div class="card-header bg-secondary text-white text-center">
                                                    Best Selling Category
                                                </div>
                                                <div class="card-body">
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th>#</th>
                                                                <th>Category Name</th>
                                                                <th>Sales Qty</th>
                                                              </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% if(category.length != 0) { %>
                                                            <% category.forEach((Category, index) => { %>
                                                        <tr>
                                                            <td><%= index + 1 %></td> 
                                                            <td><%= Category.category_name %></td>
                                                            <td><%= Category.saleCount %></td>
                                                        </tr>
                                                        <% }) %>
                                                        <% } else { %>
                                                        <tr>
                                                    <td colspan="4" class="text-center">No recent orders found</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
            let orderChart;
                const allMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                function initChart() {
                var ctx = document.getElementById('salesChart').getContext('2d');
                
                
                let gradient = ctx.createLinearGradient(0, 0, 0, 400);
                gradient.addColorStop(0, 'rgba(58, 123, 213, 0.6)');
                gradient.addColorStop(1, 'rgba(0, 210, 255, 0.1)');

                orderChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: allMonths,
                        datasets: [{
                            label: 'Order Count',
                            data: Array(12).fill(0),
                            backgroundColor: gradient,
                            borderColor: '#3a7bd5',
                            borderWidth: 2,
                            pointBackgroundColor: '#3a7bd5',
                            pointBorderColor: '#fff',
                            pointBorderWidth: 2,
                            pointRadius: 6,
                            pointHoverRadius: 8,
                            fill: true,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 3,
                                    precision: 0,
                                    font: {
                                        size: 12,
                                        weight: 'bold'
                                    },
                                    color: '#666',
                                    callback: function(value) {
                                        return value.toFixed(0);
                                    }
                                },
                                suggestedMax: function(context) {
                                    const values = context.chart.data.datasets[0].data;
                                    const max = Math.max(...values);
                                    return Math.ceil(max / 3) * 3;
                                },
                                grid: {
                                    display: true,
                                    color: 'rgba(200, 200, 200, 0.2)',
                                    drawBorder: false
                                },
                                title: {
                                    display: true,
                                    text: 'Number of Orders',
                                    font: {
                                        size: 14,
                                        weight: 'bold'
                                    },
                                    color: '#666'
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    font: {
                                        size: 12,
                                        weight: 'bold'
                                    },
                                    color: '#666'
                                }
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: 'Monthly Sales Overview',
                                font: {
                                    size: 20,
                                    weight: 'bold'
                                },
                                padding: {
                                    top: 20,
                                    bottom: 20
                                },
                                color: '#333'
                            },
                            legend: {
                                display: false
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleFont: {
                                    size: 13
                                },
                                bodyFont: {
                                    size: 13
                                },
                                padding: 12,
                                displayColors: false,
                                callbacks: {
                                    label: function(context) {
                                        return `Orders: ${context.parsed.y}`;
                                    }
                                }
                            }
                        },
                        animation: {
                            duration: 2000,
                            easing: 'easeInOutQuart',
                            onComplete: function() {
                               
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index'
                        }
                    }
                });
              }




           

        function updateChart(data) {
          const monthOrderMap = new Map(data.map(item => [item.month, item.orderCount]));
          const updatedOrderCounts = allMonths.map(month => monthOrderMap.get(month) || 0);
          orderChart.data.datasets[0].data = updatedOrderCounts;
          orderChart.update();
        }


        function fetchOrderData() {
  const chartType = document.getElementById('chartType').value; 

  fetch(`/admin/salesChart?chartType=${chartType}`)
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      updateChart(data);  
    })
    .catch(error => {
      console.error('Error fetching order data:', error);
      document.getElementById('salesChart').innerHTML = 'Error loading chart data. Please try again later.';
    });
}

        document.addEventListener('DOMContentLoaded', function() {
          initChart();
          fetchOrderData();
        });
      
      document.getElementById('salesReportForm').addEventListener('submit', function(e) {
          e.preventDefault();
          
          const formData = new FormData(this);
          const reportType = formData.get('reportType');
          
          // Show loading indicator
          const loadingDiv = document.createElement('div');
          loadingDiv.id = 'loadingIndicator';
          loadingDiv.innerHTML = `
              <div class="text-center my-3">
                  <div class="spinner-border text-primary" role="status">
                      <span class="sr-only">Loading...</span>
                  </div>
                  <p class="mt-2">Generating ${reportType.toUpperCase()} Report...</p>
              </div>
          `;
          this.appendChild(loadingDiv);

          fetch('/admin/generateSalesReport', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/x-www-form-urlencoded'
              },
              body: new URLSearchParams(formData).toString()
          })
          .then(response => {
              if (!response.ok) {
                  throw new Error(`HTTP error! status: ${response.status}`);
              }
              if (reportType === 'json') {
                  return response.json();
              } else {
                  return response.blob();
              }
          })
          .then(data => {
              // Remove loading indicator
              const loadingIndicator = document.getElementById('loadingIndicator');
              if (loadingIndicator) {
                  loadingIndicator.remove();
              }

              if (reportType === 'json') {
                  displayReportResults(data);
              } else {
                  downloadReport(data, reportType);
                  
                  // Show success message
                  const successAlert = document.createElement('div');
                  successAlert.className = 'alert alert-success alert-dismissible fade show mt-3';
                  successAlert.innerHTML = `
                      <strong>Success!</strong> Your ${reportType.toUpperCase()} report has been generated and downloaded.
                      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                      </button>
                  `;
                  document.getElementById('reportResults').appendChild(successAlert);
                  
                  // Auto-remove success message after 5 seconds
                  setTimeout(() => {
                      successAlert.remove();
                  }, 5000);
              }
          })
          .catch(error => {
              console.error('Error:', error);
              
              // Remove loading indicator
              const loadingIndicator = document.getElementById('loadingIndicator');
              if (loadingIndicator) {
                  loadingIndicator.remove();
              }

              // Show error message
              const errorAlert = document.createElement('div');
              errorAlert.className = 'alert alert-danger alert-dismissible fade show mt-3';
              errorAlert.innerHTML = `
                  <strong>No Record</strong> available.
                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                  </button>
              `;
              document.getElementById('reportResults').appendChild(errorAlert);
          });
      });

      
      
      function displayReportResults(data) {
          const table = document.createElement('table');
          table.className = 'table table-bordered';
          table.innerHTML = `
              <thead>
                  <tr>
                      <th>Details</th>
                      <th>Value</th>
                  </tr>
              </thead>
              <tbody>
                  <tr><td>Total Orders</td><td>${data.totalOrders || 0}</td></tr>
                  <tr><td>Original Total</td><td>₹${(data.originalTotal || 0).toFixed(2)}</td></tr>
                  <tr><td>Offer Discount</td><td>₹${(data.offerDiscount || 0).toFixed(2)}</td></tr>
                  <tr><td>Total After Offers</td><td>₹${(data.afterOfferTotal || 0).toFixed(2)}</td></tr>
                  <tr><td>Coupon Discount</td><td>₹${(data.totalCouponDiscount || 0).toFixed(2)}</td></tr>
                  <tr><td>Final Total</td><td>₹${(data.finalTotal || 0).toFixed(2)}</td></tr>
              </tbody>
          `;
      
          
          const resultsContainer = document.getElementById('reportResults');
          resultsContainer.innerHTML = '';
          resultsContainer.appendChild(table);
      }
      
      function updateRecentOrdersTable(recentOrders) {
          const tableBody = document.querySelector('#recentOrdersTable tbody');
          tableBody.innerHTML = '';
      
          recentOrders.forEach((order, index) => {
              const row = tableBody.insertRow();
              row.innerHTML = `
                  <td>${index + 1}</td>
                  <td>${order.orderId}</td>
                  <td>${order.date}</td>
                  <td>${order.status}</td>
              `;
          });
      }
      
      function downloadReport(blob, type) {
          if (type === 'excel') {
              const currentDate = new Date().toISOString().slice(0, 10);
              const fileName = `sales_report_${currentDate}.xlsx`;
              
              
              blob.arrayBuffer().then(data => {
                  const workbook = new ExcelJS.Workbook();
                  workbook.xlsx.load(data).then(() => {

                      workbook.xlsx.writeBuffer().then(buffer => {
                          const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                          const url = window.URL.createObjectURL(blob);
                          const a = document.createElement('a');
                          a.href = url;
                          a.download = fileName;
                          document.body.appendChild(a);
                          a.click();
                          window.URL.revokeObjectURL(url);
                          document.body.removeChild(a);
                      });
                  });
              });
          } else {
             
              const url = window.URL.createObjectURL(blob);
              const a = document.createElement('a');
              a.href = url;
              a.download = `sales_report_${new Date().toISOString().slice(0, 10)}.pdf`;
              document.body.appendChild(a);
              a.click();
              window.URL.revokeObjectURL(url);
              document.body.removeChild(a);
          }
      }
      
      
      
     
      const quickRanges = {
          'today': () => {
              const today = new Date();
              return { start: today, end: today };
          },
          'thisWeek': () => {
              const today = new Date();
              const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));
              return { start: startOfWeek, end: new Date() };
          },
          'thisMonth': () => {
              const today = new Date();
              const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
              return { start: startOfMonth, end: today };
          },
          'thisYear': () => {
              const today = new Date();
              const startOfYear = new Date(today.getFullYear(), 0, 1);
              return { start: startOfYear, end: today };
          }
      };

      function setDateRange(range) {
          const { start, end } = quickRanges[range]();
          document.getElementById('startDate').valueAsDate = start;
          document.getElementById('endDate').valueAsDate = end;
        

      }
      

      </script>
      
</body>

</html>
